---
import type { ImageMetadata } from "astro";
import { getImage } from "astro:assets";

interface Props {
  leadTitle: string;
  title: string;
  background?: ImageMetadata;
  backgroundClass?: string;
}

const { leadTitle, title, background, backgroundClass } = Astro.props;

const breakpoints = {
  sm: 320,
  md: 640,
  lg: 1280,
  xl: 2560,
};

const getBackgroundImages = async () => {
  if (background) {
    const images = await Promise.all(
      Object.entries(breakpoints).map(async ([key, breakpoint]) => {
        return await getImage({
          src: background,
          width: breakpoint,
          fit: "inside",
        });
      }),
    );
    return images
      .flatMap((img) => {
        if (typeof img.options.src === "object" && img.options.width) {
          const scaledHeight =
            (img.options.width / img.options.src.width) *
            img.options.src.height;
          if (scaledHeight > 2 * 550) {
            return [
              `${img.src} ${img.options.width}w`,
              `${img.src} ${Math.round(img.options.width / 2)}w 2x`,
            ];
          }
          if (scaledHeight > 550) {
            return [`${img.src} ${img.options.width}w`];
          }
          return [];
        }
      })
      .join(", ");
  }
};
const scaledBackgrounds = await getBackgroundImages();
---

<section>
  {
    background && (
      <div class:list={["background", backgroundClass]}>
        <img alt="Background" src={background.src} srcset={scaledBackgrounds} />
      </div>
    )
  }
  <div class="flyin foreground">
    <h3><small>{leadTitle}</small><br />{title}</h3>
    <slot />
  </div>
</section>

<style lang="scss">
  section {
    position: relative;
    padding: 64px 32px;

    @media screen and (min-height: 600px) {
      & > div:not(.background) {
        min-height: 400px;
      }
    }

    @media screen {
      &:nth-child(odd) {
        background-color: var(--col-pale-blue);
      }
    }

    .foreground {
      position: relative;
    }

    .background {
      width: 100%;
      height: 100%;
      position: absolute;
      overflow: hidden;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;

      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    }

    .background.climb {
      img {
        object-position: left 0% top 80%;
        @media screen and (min-width: 770px) {
          object-position: left 0% top 60%;
        }
        @media screen and (min-width: 1000px) {
          object-position: left 0% top 50%;
        }
        @media screen and (min-width: 1230px) {
          object-position: left 0% top 38%;
        }
      }
    }

    @media print {
      .background {
        display: none;
      }
    }
  }
</style>
